{
    "$schema": "http://json-schema.org/draft-2019-09/schema#",
    "title": "Topaz Config Schema",
    "description": "Schema for topaz configuration files.",
    "$ref": "#/definitions/Root",
    "definitions": {
        "Root": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "version": {
                    "$ref": "#/definitions/Version"
                },
                "logging": {
                    "$ref": "#/definitions/Logging"
                },
                "debug_service": {
                    "$ref": "#/definitions/DebugService"
                },
                "directory": {
                    "$ref": "#definitions/Directory"
                },
                "remote_directory": {
                    "$ref": "#definitions/RemoteDirectory"
                },
                "jwt": {
                    "$ref": "#definitions/JSONWebToken"
                },
                "auth": {
                    "$ref": "#definitions/Authentication"
                },
                "api": {
                    "$ref": "#definitions/API"
                },
                "controller": {
                    "$ref": "#definitions/Controller"
                },
                "decision_logger": {
                    "$ref": "#definitions/DecisionLogger"
                },
                "opa": {
                    "$ref": "#definitions/OpenPolicyAgent"
                }
            },
            "required": [
                "version",
                "logging"
            ]
        },
        "Version": {
            "description": "config schema version",
            "type": "integer",
            "minimum": 2,
            "maximum": 2,
            "required": [
                "version"
            ]
        },
        "Logging": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "prod": {
                    "type": "boolean",
                    "description": "log output format, structured json (prod=true) or unstructured text (prod=false)",
                    "default": "false"
                },
                "log_level": {
                    "type": "string",
                    "description": "log level [trace|debug|info|warning|error]",
                    "enum": [
                        "trace",
                        "debug",
                        "info",
                        "warning",
                        "error"
                    ],
                    "default": "info"
                },
                "grpc_log_level": {
                    "type": "string",
                    "description": "gRPC log level [trace|debug|info|warning|error], when not specified the `log_level` value is used",
                    "enum": [
                        "trace",
                        "debug",
                        "info",
                        "warning",
                        "error"
                    ],
                    "default": "info"
                }
            }
        },
        "DebugService": {
            "description": "debug service setting",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "enable debug service",
                    "default": "false"
                },
                "listen_address": {
                    "type": "string",
                    "description": "debug service listen address",
                    "default": "localhost:6060"
                },
                "shutdown_timeout": {
                    "type": "integer",
                    "description": "delay debugger shutdown",
                    "default": 0
                }
            }
        },
        "Directory": {
            "description": "edge directory config",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "db_path": {
                    "type": "string",
                    "description": "file path of edge directory database file",
                    "default": "${TOPAZ_DB_DIR}/directory.db"
                },
                "request_timeout": {
                    "type": "string",
                    "description": "edge directory request timeout in seconds",
                    "default": "5s"
                }
            }
        },
        "RemoteDirectory": {
            "description": "remote directory config",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "address": {
                    "type": "string",
                    "description": "gRPC host address and port"
                },
                "token": {
                    "type": "string",
                    "description": "Bearer authorization token"
                },
                "tenant_id": {
                    "type": "string",
                    "description": "tenant identifier"
                },
                "api_key": {
                    "type": "string",
                    "description": "basic authorization token"
                },
                "client_cert_path": {
                    "type": "string",
                    "description": "path to gRPC certificate file"
                },
                "client_key_path": {
                    "type": "string",
                    "description": "path to gRPC key file"
                },
                "ca_cert_path": {
                    "type": "string",
                    "description": "path to CA certificate file"
                },
                "timeout_in_seconds": {
                    "type": "integer",
                    "description": "gRPC connection timeout in seconds",
                    "deprecated": true
                },
                "insecure": {
                    "type": "boolean",
                    "description": "skip TLS verification",
                    "default": "false"
                },
                "no_tls": {
                    "type": "boolean",
                    "description": "disable TLS and use a plaintext connection",
                    "default": "false"
                },
                "headers": {
                    "type": "object",
                    "description": "map of additional gRPC headers",
                    "additionalProperties": {
                        "description": "header key : value",
                        "type":"string"
                    },
                    "examples": [
                        {
                            "aserto-account-id": "00000000-1111-2222-3333-444455556666"
                        }
                    ]
                }
            }
        },
        "JSONWebToken": {
            "description": "JWT validation configuration",
            "type":"object",
            "additionalProperties": false,
            "properties": {
                "acceptable_time_skew_seconds": {
                    "type": "integer",
                    "description": "allowed skew",
                    "default": 5,
                    "minimum": 0,
                    "maximum": 60
                }
            }
        },
        "Authentication": {
            "description": "Authentication configuration",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "keys": {
                    "description": "array of api keys",
                    "type": "array",
                    "items": {
                        "description": "an api key",
                        "type": "string"
                    },
                    "uniqueItems": true
                },
                "options": {
                    "description": "options",
                    "type": "object",
                    "properties": {
                        "default": {
                            "description": "default settings",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "enable_api_key":{
                                    "description": "enable API key access",
                                    "type": "boolean"
                                },
                                "enable_anonymous": {
                                    "description": "enable anonymous access",
                                    "type": "boolean"
                                }
                            }
                        },
                        "overrides": {
                            "description": "overrides",
                            "type": "object",
                            "properties": {
                                "paths": {
                                    "description": "paths",
                                    "type":"array",
                                    "items": {
                                        "description": "path to override",
                                        "type": "string"
                                    }
                                },
                                "override": {
                                    "description": "override",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "enable_api_key":{
                                            "description": "enable API key access",
                                            "type": "boolean"
                                        },
                                        "enable_anonymous": {
                                            "description": "enable anonymous access",
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "API":{
            "type": "object",
            "description": "API services",
            "additionalProperties": false,
            "properties": {
                "health":{
                    "$ref": "#definitions/Health"
                },
                "metrics": {
                    "$ref": "#definitions/Metrics"
                },
                "services": {
                    "$ref": "#definitions/Services"
                }
            }
        },
        "Health": {
            "type": "object",
            "description": "Health service",
            "additionalProperties": false,
            "properties": {
                "listen_address": {
                    "description": "host address and port",
                    "type": "string"
                },
                "certs": {
                    "description": "TLS certificate configuration",
                    "$ref": "#/definitions/ServiceTLSCertificates"
                }
            }
        },
        "Metrics": {
            "type": "object",
            "description": "Metrics service",
            "additionalProperties": false,
            "properties": {
                "listen_address": {
                    "description": "host address and port",
                    "type": "string"
                },
                "certs": {
                    "description": "TLS certificate configuration",
                    "$ref": "#/definitions/ServiceTLSCertificates"
                },
                "zpages": {
                    "description": "enable zPages trace & metric endpoint",
                    "type": "boolean",
                    "default": "false",
                    "deprecated": true
                }
            }
        },
        "Services": {
            "type": "object",
            "description": "Services type config",
            "uniqueItems": true,
            "properties": {
                "console": {
                    "description": "console service",
                    "$ref": "#/definitions/ServiceInstance"
                },
                "model": {
                    "description": "directory model service",
                    "$ref": "#/definitions/ServiceInstance"
                },
                "reader": {
                    "description": "directory reader service",
                    "$ref": "#/definitions/ServiceInstance"
                },
                "writer": {
                    "description": "directory writer service",
                    "$ref": "#/definitions/ServiceInstance"
                },
                "importer": {
                    "description": "directory importer service",
                    "$ref": "#/definitions/ServiceInstance"
                },
                "exporter": {
                    "description": "directory exporter service",
                    "$ref": "#/definitions/ServiceInstance"
                },
                "authorizer": {
                    "description": "authorizer service",
                    "$ref": "#/definitions/ServiceInstance"
                }
            }
        },
        "ServiceInstance": {
            "description": "Service instance config",
            "properties": {
                "needs": {
                    "description": "Required service dependencies",
                    "$ref": "#/definitions/ServiceNeeds"
                },
                "grpc": {
                    "description": "Service gRPC endpoint configuration",
                    "$ref": "#/definitions/ServiceGRPC"
                },
                "gateway": {
                    "description": "Service REST gateway endpoint configuration",
                    "$ref": "#/definitions/ServiceGateway"
                }
            }
        },
        "ServiceNeeds":{
            "type": "array",
            "uniqueItems": true
        },
        "ServiceGRPC": {
            "properties": {
                "fqdn": {
                    "description": "fully qualified domain name",
                    "type": "string"
                },
                "listen_address": {
                    "description": "gRPC host address and port",
                    "type": "string"
                },
                "connection_timeout_seconds": {
                    "description": "gRPC connection timeout in seconds",
                    "type": "integer"
                },
                "certs": {
                    "description": "gRPC TLS certificate configuration",
                    "$ref": "#/definitions/ServiceTLSCertificates"
                }
            }
        },
        "ServiceGateway": {
            "properties": {
                "fqdn": {
                    "description": "fully qualified domain name",
                    "type": "string"
                },
                "listen_address": {
                    "description": "REST gateway host address and port",
                    "type": "string"
                },
                "certs": {
                    "description": "REST gateway TLS certificate configuration",
                    "$ref": "#/definitions/ServiceTLSCertificates"
                },
                "allowed_origins":{
                    "description": "allowed CORS origins",
                    "type": "array",
                    "items": {
                        "description": "URL path of allowed origin",
                        "type": "string"
                    },
                    "uniqueItems": true
                },
                "allowed_headers": {
                    "description": "allowed headers",
                    "type": "array",
                    "items": {
                        "description": "header name",
                        "type": "string"
                    }
                },
                "allowed_methods": {
                    "description": "allowed HTTP methods",
                    "type": "array",
                    "items": {
                        "description": "HTTP method name",
                        "type": "string"
                    }
                },
                "http": {
                    "description": "allow HTTP traffic",
                    "type": "boolean",
                    "default": false,
                    "deprecated": true
                },
                "read_timeout": {
                    "description": "ReadTimeout is the maximum duration for reading the entire request, including the body",
                    "$comment": "https://pkg.go.dev/net/http@go1.20.7#Server",
                    "type": "string",
                    "default":  "2s"
                },
                "read_header_timeout": {
                    "description": "ReadHeaderTimeout is the amount of time allowed to read request headers",
                    "$comment": "https://pkg.go.dev/net/http@go1.20.7#Server",
                    "type": "string",
                    "default":  "2s"
                },
                "write_timeout": {
                    "description": "WriteTimeout is the maximum duration before timing out writes of the response",
                    "$comment": "https://pkg.go.dev/net/http@go1.20.7#Server",
                    "type": "string",
                    "default":  "2s"
                },
                "idle_timeout": {
                    "description": "IdleTimeout is the maximum amount of time to wait for the next request when keep-alives are enabled",
                    "$comment": "https://pkg.go.dev/net/http@go1.20.7#Server",
                    "type": "string",
                    "default":  "30s"
                }
            }
        },
        "ServiceTLSCertificates": {
            "properties": {
                "tls_cert_path": {
                    "description": "TLS certificate filepath",
                    "type": "string"
                },
                "tls_key_path": {
                    "description": "TLS key filepath",
                    "type": "string"
                },
                "tls_ca_cert_path": {
                    "description": "TLS CA certificate filepath",
                    "type": "string"
                }
            }
        },
        "OpenPolicyAgent": {
            "description": "Open Policy Agent config, see https://www.openpolicyagent.org/docs/latest/configuration/",
            "properties": {
                "instance_id": {
                    "description": "",
                    "type": "string"
                },
                "graceful_shutdown_period_seconds": {
                    "description": "",
                    "type": "integer"
                },
                "max_plugin_wait_time_seconds": {
                    "description": "",
                    "type": "integer"
                },
                "local_bundles": {
                    "$ref": "#/definitions/OpenPolicyAgentLocalBundles"
                },
                "config": {
                    "$ref": "#/definitions/OpenPolicyAgentConfig"
                }
            }
        },
        "OpenPolicyAgentLocalBundles": {
            "description": "OPA local bundles block"
        },
        "OpenPolicyAgentConfig": {
            "description": "OPA config block"
        },
        "Controller": {
            "description": "Control plane configuration",
            "properties": {
                "enabled": {
                    "description": "enable connection to control plane",
                    "type": "boolean"
                },
                "server": {
                    "description":"control plane service configuration",
                    "type": "object",
                    "properties": {
                        "address": {
                            "description": "address of relay service",
                            "type": "string",
                            "examples": [
                                "relay.prod.aserto.com:8443"
                            ]
                        },
                        "api_key": {
                            "description": "API key",
                            "type": "string"
                        },
                        "client_cert_path": {
                            "description": "mTLS control plane cert path",
                            "type": "string"
                        },
                        "client_key_path": {
                            "description": "mTLS control plane key path",
                            "type": "string"
                        }
                    }
                }
            }
        },
        "DecisionLogger": {
            "description": "Decision Logger configuration",
            "properties": {
                "type": {
                    "description": "decision log plugin name",
                    "type": "string"
                },
                "config": {
                    "description": "decision log plugin configuration",
                    "type": "object",
                    "properties": {
                        "store_directory": {
                            "description": "path to mount point for decision logs buffer storage",
                            "type": "string",
                            "examples": ["/decisions"]
                        },
                        "scribe": {
                            "description": "Scribe configuration",
                            "type": "object",
                            "properties": {
                                "address": {
                                    "description": "address of scribe service",
                                    "type": "string",
                                    "default": ""
                                },
                                "client_cert_path": {
                                    "description": "mTLS scribe cert path",
                                    "type": "string"
                                },
                                "client_key_path": {
                                    "description": "mTLS scribe key path",
                                    "type": "string"
                                },
                                "headers": {
                                    "description": "map of additional gRPC headers",
                                    "type": "object",
                                    "additionalProperties": {
                                        "description": "header key : value",
                                        "type":"string"
                                    },
                                    "examples": [
                                        {
                                            "aserto-tenant-id": "00000000-1111-2222-3333-444455556666"
                                        }
                                    ]
                                },
                                "max_inflight_batches": {
                                    "description": "",
                                    "type": "integer"
                                },
                                "ack_wait_seconds": {
                                    "description": "",
                                    "type": "integer",
                                    "default": 10
                                },
                                "disable_tls": {
                                    "description": "disable TLS verification",
                                    "type": "boolean"
                                }
                            }
                        },
                        "shipper": {
                            "description": "Shipper configuration",
                            "type": "object",
                            "$comment": "https://github.com/aserto-dev/self-decision-logger/blob/main/shipper/config.go",
                            "properties": {
                                "max_bytes": {
                                    "description": "max message size 100mb (100*1024*1024)",
                                    "type": "integer",
                                    "default": 104857600
                                },
                                "max_batch_size": {
                                    "description": "max batch size in messages",
                                    "type": "integer",
                                    "default": 512
                                },
                                "publish_timeout_seconds": {
                                    "description": "publish timeout in seconds",
                                    "type": "integer",
                                    "default": 10
                                },
                                "max_inflight_batches": {
                                    "description": "max number of inflight batches",
                                    "type": "integer",
                                    "default": 10
                                },
                                "ack_wait_seconds": {
                                    "description": "ack wait time in seconds",
                                    "type": "integer",
                                    "default": 60
                                },
                                "delete_stream_on_done": {
                                    "description": "delete stream when done",
                                    "type": "boolean",
                                    "default": false
                                },
                                "backoff_seconds": {
                                    "description": "backoff in seconds",
                                    "type": "array",
                                    "default": [
                                        5, 10, 30, 60, 120, 300
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
