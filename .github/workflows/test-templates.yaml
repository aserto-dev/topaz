name: ci

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main
      - dev
      - dev-*
      - release-*
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*
  # Run tests for all PRs
  pull_request:

env:
  VAULT_ADDR: https://vault.eng.aserto.com/
  PRE_RELEASE: ${{ github.ref == 'refs/heads/main' && 'main' || '' }}
  GO_VERSION: "1.22"
  GO_RELEASER_VERSION: "v1.24.0"
  GO_LANGCI_LINT_VERSION: "v1.56.2"
  GO_TESTSUM_VERSION: "1.11.0"

jobs:
  test-templates:
    runs-on: ubuntu-latest
    steps:
      -
        name: Read Configuration
        uses: hashicorp/vault-action@v3
        id: vault
        with:
          url: https://vault.eng.aserto.com/
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            kv/data/github  "SSH_PRIVATE_KEY"     | SSH_PRIVATE_KEY;
            kv/data/github  "USERNAME"            | DOCKER_USERNAME;
            kv/data/github  "DOCKER_PUSH_TOKEN"   | DOCKER_PASSWORD;
            kv/data/github  "READ_WRITE_TOKEN"    | READ_WRITE_TOKEN;
      -
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      -
        name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      -
        name: Setup QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v3
        with:
          registry: https://ghcr.io
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
      -
        name: Docker SSH Setup
        run: |
          mkdir -p $HOME/.ssh
          umask 0077 && echo -e "${SSH_PRIVATE_KEY}" > $HOME/.ssh/id_rsa
          ssh-keyscan github.com >> $HOME/.ssh/known_hosts
          git config --global url."git@github.com:".insteadOf https://github.com/
          git config --global user.email "github-bot@aserto.com"
          git config --global user.name "Aserto Bot"
          eval `ssh-agent`
          ssh-add $HOME/.ssh/id_rsa
      -
        name: Push image to GitHub Container Registry
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: ${{ env.GO_RELEASER_VERSION }}
          args: release --clean --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Test Templates
        run: |
          make test-templates
